package virtualpetgame.GUIs;

import javax.swing.JOptionPane;
import virtualpetgame.ActivePet;
import virtualpetgame.Game;

public class MainGame extends javax.swing.JFrame {

    private Game game;

    public void setArt(String art) {
        this.petArtTextArea.setText(art);
    }

    public void setHunger(int percentage) {
        this.hungerBar.setValue(percentage);
    }

    public void setBoredom(int percentage) {
        this.boredomBar.setValue(percentage);
    }

    public void setCleanliness(int percentage) {
        this.cleanlinessBar.setValue(percentage);
    }

    public void setMood(String mood) {
        this.moodTextField.setText(mood);
    }

    public void setMoney(int money) {
        this.moneyBar.setText("$" + Integer.toString(money));
    }

    public void tick() {
        this.checkErrorMessage();
    }

    public void showDeathDialog() {
        JOptionPane.showMessageDialog(this, "Oh no!\n"
                + "Your pet has died!\n"
                + "Your save will be deleted automatically.",
                "Oh no!",
                JOptionPane.WARNING_MESSAGE);
    }

    private void showHelpDialog() {
        JOptionPane.showMessageDialog(this, "How to play:\n"
                + "Feed, play with, or clean your pet to keep them happy.\n"
                + "Try to keep hunger and boredom low, and cleanliness high.\n"
                + "The happier your pet is, the more money you earn.\n"
                + "The game will save automatically every minute, as well as saving on close.\n"
                + "Make sure to care for your pet well!\n",
                "Help",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void showErrorText(String text) {
        this.errorMessageLabel.setText(text);
        this.errorMessageLabel.setEnabled(true);
    }

    private int errorTimeoutCount;

    //If an error message exists, waits 5 ticks to remove it.
    private void checkErrorMessage() {
        if (!this.errorMessageLabel.getText().equals("")) {
            if (++errorTimeoutCount > 5) {
                errorTimeoutCount = 0;
                this.showErrorText("");
            }
        }
    }

    /**
     * Creates new form MainGame
     */
    public MainGame(Game game) {
        this.game = game;
        initComponents();
        GUIutils.setWindowPosition(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        petArtTextArea = new javax.swing.JTextArea();
        hungerLabel = new javax.swing.JLabel();
        hungerBar = new javax.swing.JProgressBar();
        boredomLabel = new javax.swing.JLabel();
        boredomBar = new javax.swing.JProgressBar();
        cleanlinessLabel = new javax.swing.JLabel();
        cleanlinessBar = new javax.swing.JProgressBar();
        moneyLabel = new javax.swing.JLabel();
        moneyBar = new javax.swing.JTextField();
        playButton = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        feedButton = new javax.swing.JButton();
        moodLabel = new javax.swing.JLabel();
        moodTextField = new javax.swing.JTextField();
        errorMessageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                gameExiting(evt);
            }
        });

        petArtTextArea.setEditable(false);
        petArtTextArea.setColumns(20);
        petArtTextArea.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        petArtTextArea.setRows(5);
        jScrollPane1.setViewportView(petArtTextArea);

        hungerLabel.setText("Hunger:");

        boredomLabel.setText("Boredom:");

        cleanlinessLabel.setText("Cleanliness:");

        moneyLabel.setText("Money:");

        moneyBar.setEditable(false);
        moneyBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moneyBarActionPerformed(evt);
            }
        });

        playButton.setText("Play (" + ((ActivePet.PLAY_COST == 0) ? "Free" : "$" + ActivePet.PLAY_COST) + ")");
        playButton.setToolTipText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        cleanButton.setText("Clean (" + ((ActivePet.CLEAN_COST == 0) ? "Free" : "$" + ActivePet.CLEAN_COST) + ")");
        cleanButton.setToolTipText("Clean");
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        helpButton.setText("?");
        helpButton.setToolTipText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        feedButton.setText("Feed (" + ((ActivePet.FEED_COST == 0) ? "Free" : "$" + ActivePet.FEED_COST) + ")");
        feedButton.setToolTipText("Feed");
        feedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedButtonActionPerformed(evt);
            }
        });

        moodLabel.setText("Mood:");

        moodTextField.setEditable(false);
        moodTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moodTextFieldActionPerformed(evt);
            }
        });

        errorMessageLabel.setForeground(new java.awt.Color(255, 30, 30));
        errorMessageLabel.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(feedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cleanButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hungerBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boredomBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cleanlinessBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moneyBar)
                    .addComponent(moodTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hungerLabel)
                            .addComponent(boredomLabel)
                            .addComponent(cleanlinessLabel)
                            .addComponent(moneyLabel)
                            .addComponent(moodLabel))
                        .addGap(0, 292, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorMessageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hungerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hungerBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boredomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boredomBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cleanlinessLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cleanlinessBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moodLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moneyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moneyBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playButton)
                            .addComponent(cleanButton)
                            .addComponent(feedButton)
                            .addComponent(helpButton)
                            .addComponent(errorMessageLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moneyBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moneyBarActionPerformed
        //TODO
    }//GEN-LAST:event_moneyBarActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        this.showHelpDialog();
    }//GEN-LAST:event_helpButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if (game.activePet.getMoney() < ActivePet.PLAY_COST) {
            this.showErrorText("You can't afford that!");
        } else {
            game.activePet.spend(ActivePet.PLAY_COST);
            game.activePet.play();
            game.updateGUI();
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanButtonActionPerformed
        if (game.activePet.getMoney() < ActivePet.CLEAN_COST) {
            this.showErrorText("You can't afford that!");
        } else {
            game.activePet.spend(ActivePet.CLEAN_COST);
            game.activePet.clean();
            game.updateGUI();
        }
    }//GEN-LAST:event_cleanButtonActionPerformed

    private void feedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedButtonActionPerformed
        if (game.activePet.getMoney() < ActivePet.FEED_COST) {
            this.showErrorText("You can't afford that!");
        } else {
            game.activePet.spend(ActivePet.FEED_COST);
            game.activePet.feed();
            game.updateGUI();
        }
    }//GEN-LAST:event_feedButtonActionPerformed

    private void moodTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moodTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moodTextFieldActionPerformed

    private void gameExiting(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_gameExiting
        game.fileIO.save();
    }//GEN-LAST:event_gameExiting

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGame(new Game()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar boredomBar;
    private javax.swing.JLabel boredomLabel;
    private javax.swing.JButton cleanButton;
    private javax.swing.JProgressBar cleanlinessBar;
    private javax.swing.JLabel cleanlinessLabel;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.JButton feedButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JProgressBar hungerBar;
    private javax.swing.JLabel hungerLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField moneyBar;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JLabel moodLabel;
    private javax.swing.JTextField moodTextField;
    private javax.swing.JTextArea petArtTextArea;
    private javax.swing.JButton playButton;
    // End of variables declaration//GEN-END:variables
}
